{"version":3,"sources":["../../src/pages/maploc/maploc.module.ts","../../src/pages/maploc/maploc.ts","../../node_modules/rxjs/add/observable/interval.js","../../node_modules/rxjs/observable/interval.js","../../node_modules/rxjs/observable/IntervalObservable.js","../../node_modules/rxjs/util/isNumeric.js","../../node_modules/rxjs/add/operator/mergeMapTo.js","../../node_modules/rxjs/operator/mergeMapTo.js","../../node_modules/rxjs/operators/mergeMapTo.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AAUtC;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAR5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;aACrC;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqC;AACC;AACqC;AAG/D;AACJ;AAEC;AACA;AACP;AAE8C;AACtB;AAIvD;;;;;GAKG;AAOH;IAgBE,oBAAmB,OAAsB,EAAS,OAAgB,EAAS,GAAsB,EAAS,IAAU,EAAS,SAAoB,EAAU,WAAyB,EAAU,UAAsB;QAAjM,YAAO,GAAP,OAAO,CAAe;QAAS,YAAO,GAAP,OAAO,CAAS;QAAS,QAAG,GAAH,GAAG,CAAmB;QAAS,SAAI,GAAJ,IAAI,CAAM;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAc;QAAU,eAAU,GAAV,UAAU,CAAY;QATpN,sBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACtD,sBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QASrD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEvD,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAE7D,CAAC;IAGD,mCAAc,GAAd;QAEE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAElC,CAAC;IAGD,6BAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;YAC/C,KAAI,CAAC,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,CAAC;YAC1C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAE5C,EAAE,EAAC,KAAI,CAAC,QAAQ,IAAG,EAAE,IAAI,KAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAI,CAAC,QAAQ,IAAK,OAAO,CAAC,EAAC;gBACpG,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACrB,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAa,GAAb;QAAA,iBAcC;QAbC,wBAAwB;QACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,WAAW;YAC9C,EAAE,EAAC,WAAW,IAAI,IAAI,CAAC,EAAC;gBAEpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;YAEtD,CAAC;YAAA,IAAI,EAAC;gBACH,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;YACtD,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAID,4BAAO,GAAP;QAAA,iBAwBC;QAtBC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YAEnD,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACzF,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;YACtC,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;YAExC,IAAI,UAAU,GAAG;gBACf,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,EAAE;aACT;YAGD,KAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAC1E,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;YAExC,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,MAAM,EAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QAExD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAGJ,CAAC;IAGD,6CAAwB,GAAxB,UAAyB,QAAQ,EAAC,OAAO;QAAzC,iBAqBC;QApBC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3C,IAAI,GAAG,GAAK,OAAO,GAAG,GAAG,GAAG,QAAQ,CAAC;QAErC,8CAA8C;QAC9C,mCAAmC;QAEnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAGnB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC3B,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,GAAG;YAChB,UAAU,EAAE,SAAS;SACtB,EAAE,UAAC,QAAQ,EAAE,MAAM;YAClB,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC,mCAAmC,GAAG,MAAM,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4BAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAED,iCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC;aAChD,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAA/B,CAA+B,CAAC;aAC3C,KAAK,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAArC,CAAqC,CAAC,CAAC;IACxD,CAAC;IAED,6CAAwB,GAAxB;QAAA,iBAIC;QAHC,UAAU,CAAC;YACP,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,yCAAoB,GAApB;QAAA,iBA2BC;QA1BG,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAEnC,IAAI,CAAC,MAAM,GAAG,yBAAyB,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,aAAa,GAAE,IAAI,CAAC,UAAU,CAAC;QAEnD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,aAAG;YACzD,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC7C,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;YAE5C,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,IAAI,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,qBAAqB,IAAI,EAAE,CAAC,EAAC;gBAC3F,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAC,KAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;gBACtG,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,CAAC;YAED,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,GAAG,IAAI,KAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,EAAE,CAAC,EAAC;gBACvH,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,CAAC;YAGD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAG,KAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAE;QAEtE,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACtC,CAAC;IA5JiB;QAAjB,yEAAS,CAAC,KAAK,CAAC;kCAAa,iEAAU;kDAAC;IAJ9B,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;mBAiBoN;OAhBzM,UAAU,CAkKtB;IAAD,CAAC;AAAA;SAlKY,UAAU,e;;;;;;;;AC7BvB;AACA;AACA;AACA;AACA,oC;;;;;;;;ACJA;AACA;AACA;AACA,oC;;;;;;;;ACHA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,OAAO;AACtB;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,8C;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uCAAuC;AACvE;AACA;AACA;AACA,sC;;;;;;;;ACnDA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uCAAuC;AACvE;AACA;AACA;AACA;AACA,8BAA8B,yFAAyF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MaplocPage } from './maploc';\n\n@NgModule({\n  declarations: [\n    MaplocPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MaplocPage),\n  ],\n})\nexport class MaplocPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maploc/maploc.module.ts","import { Component , ViewChild ,ElementRef } from '@angular/core';\nimport { IonicPage, NavController, NavParams,Platform } from 'ionic-angular';\nimport { Geolocation ,GeolocationOptions ,Geoposition ,PositionError } from '@ionic-native/geolocation';\nimport { Diagnostic } from '@ionic-native/diagnostic';\n\nimport { Storage } from '@ionic/storage';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/operator/mergeMapTo';\nimport 'rxjs/add/operator/map';\n\nimport { ApiRequestProvider } from '../../providers/api-request/api-request';\nimport { CallNumber } from '@ionic-native/call-number';\n\ndeclare var google;\n\n/**\n * Generated class for the MaplocPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-maploc',\n  templateUrl: 'maploc.html',\n})\nexport class MaplocPage {\n\n  options : GeolocationOptions;\n  currentPos : Geoposition;\n  @ViewChild('map') mapElement: ElementRef;\n  map: any;\n\n  directionsService = new google.maps.DirectionsService;\n  directionsDisplay = new google.maps.DirectionsRenderer;\n\n  mylat: any;items: any;mylong: any;item: any;page_from: any;data: any;trans_code: any;\n  pharm_name: any;pharm_location: any;pharm_longitude: any;api_data: any;\n  pharm_phone: any;gottenitem: any;cartinfo: any;total_db: any;\n  pharm_latitude: any;pharm_drugname: any; pharm_drugdescription: any;latLngme:any;action:any;datacollection:any;\n  latme :any;total:any;itemsgotten:any;longme :any;PhoneNumber:any;diagonistic_status:any;\n\n  constructor(public navCtrl: NavController, public storage: Storage, public api:ApiRequestProvider,private http: Http, public navParams: NavParams, private geolocation : Geolocation, private callNumber: CallNumber) {\n    this.total_db = 0;\n    this.page_from = this.navParams.get('page');\n    this.PhoneNumber = localStorage.getItem('PhoneNumber');\n    \n    this.trans_code = localStorage.getItem('Transaction_Code');\n\n  }\n\n\n  ionViewDidLoad(){\n\n    this.loadcart();\n    this.getTotalPrice();\n    this.initMap();\n    this.getDeliveryGuyObservable();\n   \n  }\n\n\n  loadcart() {\n    this.storage.get('currentcart').then((gottenitems) => {\n      this.gottenitem = \"[\" + gottenitems + \"]\";\n      this.cartinfo = JSON.parse(this.gottenitem);\n  \n      if(this.cartinfo =='' || this.cartinfo == '[]' || this.cartinfo == null || this.cartinfo  == 'false'){\n        this.cartinfo = [];\n      }\n      console.log('Your cartitems are ', this.cartinfo);\n    });\n  }\n\n  getTotalPrice(){\n    // Store pin in database\n    this.storage.get('pricetotal').then((gottenitems) => {\n      if(gottenitems != null){\n\n          this.total_db = Number(gottenitems);\n          console.log('Get Total Price Old', this.total_db);\n\n      }else{\n         this.total_db = 0;\n         console.log('Get total price New ', this.total_db);\n      }\n    });\n\n  }\n\n\n\n  initMap() {\n\n    this.geolocation.getCurrentPosition().then((position) => {\n\n     let latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n     this.latme = position.coords.latitude;\n     this.longme = position.coords.longitude;\n\n     let mapOptions = {\n       center: latLng,\n       zoom: 15\n     }\n\n\n     this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n     this.directionsDisplay.setMap(this.map);\n\n     this.calculateAndDisplayRoute(this.longme,this.latme);\n\n   }, (err) => {\n     console.log(err);\n   });\n\n\n  }\n\n  \n  calculateAndDisplayRoute(guy_long,guy_lat) {\n    var start = this.latme + ',' + this.longme;\n    var end =   guy_lat + ',' + guy_long;\n\n    // var start = '5.300622800000001,-1.9992394';\n    // var end = '5.300535, -1.993902';\n\n    console.log(start);\n\n\n    this.directionsService.route({\n      origin: start,\n      destination: end,\n      travelMode: 'DRIVING'\n    }, (response, status) => {\n      if (status === 'OK') {\n        this.directionsDisplay.setDirections(response);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n\n  pagepop(){\n    this.navCtrl.push('MenuPage');\n  }\n\n  callPharmacy(){\n    this.callNumber.callNumber(this.PhoneNumber, false)\n      .then(() => console.log('Launched dialer!'))\n      .catch(() => console.log('Error launching dialer'));\n  }\n\n  getDeliveryGuyObservable() {\n    setTimeout(() => {\n        this.fetchDeliveryGuysloc();\n    }, 1000);\n  }\n\n  fetchDeliveryGuysloc() {\n      console.log(\"Selasie is my name \");\n\n      this.action = \"&actions=deliveryguyloc\";\n      this.datacollection = '&transcode='+ this.trans_code;\n  \n        this.api.postData(this.action,this.datacollection).then(res => {\n          this.items=JSON.parse(res['_body']).response;\n          this.api_data=JSON.parse(res['_body']).data;\n         \n          if(this.api_data.deliveryguy_longitude != null || this.api_data.deliveryguy_longitude != \"\"){\n            this.calculateAndDisplayRoute(this.api_data.deliveryguy_longitude,this.api_data.deliveryguy_latitude);\n            this.getDeliveryGuyObservable();\n          }\n          \n          if(this.api_data.delivery_status != \"3\" && this.api_data.delivery_status != null && this.api_data.delivery_status != \"\"){\n            this.getDeliveryGuyObservable();\n          }\n\n          \n          console.log(\"This is de res\" , this.api_data.deliveryguy_latitude) ;\n          \n        }).catch(err=>{\n          console.log(err);\n        });\n\n        this.getDeliveryGuyObservable();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maploc/maploc.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/interval.js\n// module id = 317\n// module chunks = 0","\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/interval.js\n// module id = 318\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/IntervalObservable.js\n// module id = 319\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isNumeric.js\n// module id = 320\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMapTo_1 = require('../../operator/mergeMapTo');\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/mergeMapTo.js\n// module id = 321\n// module chunks = 0","\"use strict\";\nvar mergeMapTo_1 = require('../operators/mergeMapTo');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMapTo_1.mergeMapTo(innerObservable, resultSelector, concurrent)(this);\n}\nexports.mergeMapTo = mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/mergeMapTo.js\n// module id = 322\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/mergeMapTo.js\n// module id = 323\n// module chunks = 0"],"sourceRoot":""}